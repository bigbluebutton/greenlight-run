version: '3'

services:
  postgres:
    image: postgres:14-alpine
    container_name: postgres
    restart: unless-stopped
    volumes:
      - ./data/postgres/14/database_data:/var/lib/postgresql/data
    environment:
      - PGUSER=postgres
      - PGPASSWORD=password
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_HOST_AUTH_METHOD=trust

  redis:
    image: redis:6.2-alpine
    container_name: redis
    restart: unless-stopped
    volumes:
      - ./data/redis/database_data:/data
      - ./data/redis/conf/redis.conf.template:/usr/local/etc/redis/redis.conf.template
      - ./data/certbot/conf/:/etc/letsencrypt
    command: /bin/sh -c "sed -e 's/$$HOSTNAME/redis.${DOMAIN_NAME:-xlab.blindside-dev.com}/' /usr/local/etc/redis/redis.conf.template > /usr/local/etc/redis/redis.conf && exec redis-server --appendonly yes"

  nginx:
    image: nginx:1.23
    container_name: nginx
    restart: unless-stopped
    volumes:
      - ./log/nginx/:/var/log/nginx
      - ./data/nginx/sites-common:/etc/nginx/sites-common
      - ./data/nginx/sites.template-${SITES_TEMPLATE:-docker}:/etc/nginx/sites.template
      - ./data/certbot/conf/:/etc/letsencrypt
      - ./data/certbot/www/:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
    environment:
      - NGINX_HOSTNAME=${DOMAIN_NAME:-xlab.blindside-dev.com}
    depends_on:
      - greenlight
      - keycloak
    command: /bin/bash -c "envsubst '$$NGINX_HOSTNAME' < /etc/nginx/sites.template > /etc/nginx/conf.d/default.conf && while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g 'daemon off;'"

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./log/certbot/:/var/log/letsencrypt
      - ./data/certbot/conf/:/etc/letsencrypt
      - ./data/certbot/www/:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  greenlight:
    entrypoint: [bin/start]
    image: ${GREENLIGHT_DOCKER_IMAGE:-bigbluebutton/greenlight:v3}
    container_name: greenlight
    restart: unless-stopped
    logging:
      driver: journald
    env_file: ./data/greenlight/.env
    volumes:
      - ./data/greenlight/bin/start:/usr/src/app/bin/start
    depends_on:
      - postgres
      - redis

  keycloak:
    image: quay.io/keycloak/keycloak:19.0.2
    container_name: keycloak
    restart: unless-stopped
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: adminadmin
      KC_DB_URL: postgres
      DB_ADDR: postgres
      KC_DB: keycloakdb
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: password
      KC_HOSTNAME_STRICT: false
      KC_EDGE: proxy
    volumes:
      - ./data/certbot/conf/:/etc/letsencrypt
      - ./data/certbot/conf/live/kc.${DOMAIN_NAME:-xlab.blindside-dev.com}/cert.pem:/etc/x509/https/tls.crt
      - ./data/certbot/conf/live/kc.${DOMAIN_NAME:-xlab.blindside-dev.com}/privkey.pem:/etc/x509/https/tls.key
    depends_on:
      - postgres
    command:
      - start-dev --auto-build

  #   docker run  --name keycloak --net greenlight-run_default -p 8080:8080 -e KEYCLOAK_USER=admin -e KEYCLOAK_PASSWORD=adminadmin -e DB_VENDOR=POSTGRES -e DB_ADDR=postgres -e DB_DATABASE=keycloak -e DB_USER=postgres -e DB_PASSWORD=password jboss/keycloak:16.1.1
  #   https://www.keycloak.org/docs/latest/server_installation/index.html#_setting-up-a-load-balancer-or-proxy
  #   https://stackoverflow.com/questions/47181821/using-keycloak-behind-a-reverse-proxy-could-not-open-admin-loginpage-because-mi
