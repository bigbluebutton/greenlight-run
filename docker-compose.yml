version: '3'

services:
  postgres:
    image: postgres:14-alpine
    container_name: postgres
    restart: unless-stopped
    volumes:
      - ./data/postgres/14/database_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD

  redis:
    image: redis:6.2-alpine
    container_name: redis
    restart: unless-stopped
    volumes:
      - ./data/redis/database_data:/data
      - ./data/redis/conf/redis.conf.template:/usr/local/etc/redis/redis.conf.template
      - ./data/certbot/conf/:/etc/letsencrypt
    command: /bin/sh -c "sed -e 's/$$HOSTNAME/redis.$DOMAIN_NAME/' /usr/local/etc/redis/redis.conf.template > /usr/local/etc/redis/redis.conf && exec redis-server --appendonly yes"

  nginx:
    image: nginx:1.23
    container_name: nginx
    restart: unless-stopped
    volumes:
      - ./log/nginx/:/var/log/nginx
      - ./data/nginx/sites-common/:/etc/nginx/sites-common
      - ./data/nginx/sites.template-$SITES_TEMPLATE:/etc/nginx/sites.template
      - ./data/certbot/conf/:/etc/letsencrypt
      - ./data/certbot/www/:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
    environment:
      - DOMAIN_NAME=$DOMAIN_NAME
      - GL_HOSTNAME=$GL_HOSTNAME
      - KC_HOSTNAME=$KC_HOSTNAME
    depends_on:
      - greenlight
      - keycloak
    command: /bin/bash -c "envsubst '$$DOMAIN_NAME,$$GL_HOSTNAME,$$KC_HOSTNAME' < /etc/nginx/sites.template > /etc/nginx/conf.d/default.conf && while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g 'daemon off;'"

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./log/certbot/:/var/log/letsencrypt
      - ./data/certbot/conf/:/etc/letsencrypt
      - ./data/certbot/www/:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    depends_on:
      - nginx

  greenlight:
    entrypoint: [bin/start]
    image: $GREENLIGHT_DOCKER_IMAGE
    container_name: greenlight
    restart: unless-stopped
    logging:
      driver: journald
    env_file: ./data/greenlight/.env
    volumes:
      - ./data/greenlight/bin/start:/usr/src/app/bin/start
      - ./data/greenlight/storage:/usr/src/app/storage
    depends_on:
      - postgres
      - redis

  keycloak:
    image: ${KEYCLOAK_DOCKER_IMAGE:-quay.io/keycloak/keycloak:19.0.3-legacy}
    container_name: keycloak
    restart: unless-stopped
    environment:
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: $KEYCLOAK_PASSWORD
      DB_VENDOR: POSTGRES
      DB_ADDR: postgres
      DB_DATABASE: keycloakdb
      DB_USER: postgres
      DB_PASSWORD: $POSTGRES_PASSWORD
      PROXY_ADDRESS_FORWARDING: "true"
    volumes:
      - ./data/certbot/conf/:/etc/letsencrypt
      - ./data/certbot/conf/live/$GL_HOSTNAME.$DOMAIN_NAME/cert.pem:/etc/x509/https/tls.crt
      - ./data/certbot/conf/live/$GL_HOSTNAME.$DOMAIN_NAME/privkey.pem:/etc/x509/https/tls.key
    depends_on:
      - postgres
